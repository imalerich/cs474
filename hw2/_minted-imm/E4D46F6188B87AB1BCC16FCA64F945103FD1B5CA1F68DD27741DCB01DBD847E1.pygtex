\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{} Setup \PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}

\PYG{k+kn}{library}\PYG{p}{(}foreach\PYG{p}{)}
\PYG{k+kn}{library}\PYG{p}{(}doParallel\PYG{p}{)}
\PYG{k+kn}{library}\PYG{p}{(}MVN\PYG{p}{)}

data \PYG{o}{\PYGZlt{}\PYGZhy{}} read.csv\PYG{p}{(}\PYG{l+s}{\PYGZdq{}magic04.data\PYGZdq{}}\PYG{p}{,} header\PYG{o}{=}\PYG{n+nb+bp}{F}\PYG{p}{,} sep\PYG{o}{=}\PYG{l+s}{\PYGZdq{},\PYGZdq{}}\PYG{p}{)}
train.size \PYG{o}{\PYGZlt{}\PYGZhy{}} \PYG{l+m}{13000} \PYG{c+c1}{\PYGZsh{} Given by homework specification}
start.time \PYG{o}{\PYGZlt{}\PYGZhy{}} \PYG{k+kp}{proc.time}\PYG{p}{()}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{} Test for Normality \PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}

data \PYG{o}{\PYGZlt{}\PYGZhy{}} data\PYG{p}{[}\PYG{k+kp}{sample}\PYG{p}{(}\PYG{k+kp}{nrow}\PYG{p}{(}data\PYG{p}{)),]} \PYG{c+c1}{\PYGZsh{} Randomize the data set}
hz \PYG{o}{=} hzTest\PYG{p}{(}data\PYG{p}{[,}\PYG{l+m}{1}\PYG{o}{:}\PYG{l+m}{10}\PYG{p}{],} cov\PYG{o}{=}\PYG{k+kc}{TRUE}\PYG{p}{,} qqplot\PYG{o}{=}\PYG{k+kc}{FALSE}\PYG{p}{)}
\PYG{k+kp}{print}\PYG{p}{(}hz\PYG{p}{)}
\PYG{c+c1}{\PYGZsh{} uniPlot(data, type=\PYGZdq{}histogram\PYGZdq{})}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{} Naive Bayes (Normal) \PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}\PYGZsh{}}

\PYG{c+c1}{\PYGZsh{} cl \PYGZlt{}\PYGZhy{} makeCluster(4)}
\PYG{c+c1}{\PYGZsh{} registerDoParallel(cl)}
\PYG{c+c1}{\PYGZsh{} }
\PYG{c+c1}{\PYGZsh{} err \PYGZlt{}\PYGZhy{} foreach (i=1:100, .combine = c) \PYGZpc{}dopar\PYGZpc{} \PYGZob{}}
\PYG{c+c1}{\PYGZsh{}     library(klaR)}
\PYG{c+c1}{\PYGZsh{}     library(caret)}
\PYG{c+c1}{\PYGZsh{} }
\PYG{c+c1}{\PYGZsh{}     data \PYGZlt{}\PYGZhy{} data[sample(nrow(data)),] \PYGZsh{} Randomize the data set}
\PYG{c+c1}{\PYGZsh{} }
\PYG{c+c1}{\PYGZsh{}     train \PYGZlt{}\PYGZhy{} data[1:train.size, 1:10]}
\PYG{c+c1}{\PYGZsh{}     test \PYGZlt{}\PYGZhy{} data[(train.size+1):nrow(data), 1:10]}
\PYG{c+c1}{\PYGZsh{}     train.cl \PYGZlt{}\PYGZhy{} factor(data[1:train.size, 11])}
\PYG{c+c1}{\PYGZsh{}     test.cl \PYGZlt{}\PYGZhy{} factor(data[(train.size+1):nrow(data), 11]);}
\PYG{c+c1}{\PYGZsh{} }
\PYG{c+c1}{\PYGZsh{}     model \PYGZlt{}\PYGZhy{} NaiveBayes(x = train, grouping = train.cl, usekernel=FALSE)}
\PYG{c+c1}{\PYGZsh{}     predict.cl \PYGZlt{}\PYGZhy{} predict(model, test)\PYGZdl{}class}
\PYG{c+c1}{\PYGZsh{}     sum(test.cl != predict.cl) / nrow(test)}
\PYG{c+c1}{\PYGZsh{} \PYGZcb{}}
\PYG{c+c1}{\PYGZsh{} }
\PYG{c+c1}{\PYGZsh{} stopCluster(cl)}
\PYG{c+c1}{\PYGZsh{} acc \PYGZlt{}\PYGZhy{} 1.0 \PYGZhy{} mean(err)}
\PYG{c+c1}{\PYGZsh{} }
\PYG{c+c1}{\PYGZsh{} \PYGZsh{} About 72.6714\PYGZpc{}}
\PYG{c+c1}{\PYGZsh{} print(paste(\PYGZdq{}Naive Bayes (Normal) \PYGZhy{} Accuracy: \PYGZdq{}, acc))}
\PYG{c+c1}{\PYGZsh{} print(proc.time() \PYGZhy{} start.time)}
\end{Verbatim}
